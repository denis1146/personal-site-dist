{"version":3,"file":"assets/css/styles.0bb343b901f6f8ba26eb.bundle.css","mappings":";AACA,EAGE,SADA,SADA,SAEA,CAEF,iBACE,sBAEF,eACE,aAEF,qCAGE,cADA,aADA,oBAEA,CAEF,gCACE,cAEF,UACC,YAED,sBACE,oBACA,kBAEF,iBACE,aAEF,OAEE,yBADA,cACA,CAEF,yBAEE,SADA,SACA,CAEF,SACE,gBAEF,IACE,mBAEF,kBAEE,kBADA,mBACA,CC5BF,KACE,oCCJiB,CDQjB,UCtB4B,CDmB5B,kBCpB4B,CC+D5B,oBFvCA,eCpB4B,CDqB5B,kBCpB4B,CDuB9B,UAKE,aACA,sBAJA,gBACA,gBAFA,UAKA,CAKF,QACE,uCAOA,mBAIE,oBAGA,mBAFA,aC7C0B,CD0C1B,aAlCF,cADA,gBAuCE,mBACA,CAMF,cAIE,qBEDF,kBFDE,gBACA,uBAED,0BAEC,qBACE,aC1DwB,CD6D5B,cACE,uBACA,mBAWJ,MErBE,mBFwBA,YACE,aACA,eAIF,6BACE,oBAEF,YACE,wBAEA,kBACE,0BAEF,mBACE,aC7FwB,CDoG9B,MAIE,mBAHA,aAGA,CAEA,uBAJA,aACA,sBAOE,CAJF,iBAIE,eAzGF,cADA,eA0GE,CAEF,YACE,qBACA,qBAIJ,QAEE,wBC3H4B,CD4H5B,sBACA,wBACA,mDEtEA,kBFuEA,wBAEA,cACE,wBCjI0B,CDmI5B,eACE,6CAMJ,QAGE,uCADA,cErFA,kBFsFA,CAEA,mBAxIA,cADA,eACA,CA2IA,gBAIE,mBADA,aADA,iBADA,UAGA,CAOF,cACE,iBAEF,aACE,oBEzGF,wBF9CF,KEwBE,qCFkBA,cElBA,sCF0CF,ME1CE,qCFsFF,QEtFE,oCFwGF,QExGE,sCA0BA,yBFlDF,KEmDI,oBFTF,cESE,mBFeJ,MEfI,oBF2DJ,QE3DI,iBF6EJ,QE7EI,gBFbA,2BATF,mBAUI,gBAcJ,cAQI,yBAtBA,CAkBF,2BAJF,cAKI,2B","sources":["webpack:///./assets/styles/_reset.scss","webpack:///./assets/styles/styles.scss","webpack:///./assets/styles/_vars.scss","webpack:///./assets/styles/_mixins.scss"],"sourcesContent":["\n* {\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n:focus, :active {\n  outline: none;\n}\na, a:focus, a:active a:visited, a:hover {\n  text-decoration: none;\n  outline: none;\n  color: inherit;\n}\nfooter, header, section, nav, aside {\n  display: block;\n}\nhtml, body{\n\theight: 100%;\n}\ninput, button, textarea{\n  font-family: inherit;\n  font-size: inherit\n}\ninput::-ms-clear{\n  display: none;\n}\nbutton {\n  cursor: pointer;\n  background-color: inherit;\n}\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\nul, ol, li {\n  list-style: none;\n}\nimg {\n  vertical-align: top;\n}\nh1, h2, h3, h4, h5, h6 {\n  font-weight: inherit;\n  font-size: inherit;\n}\n","@import 'reset';\n@import 'fonts';\n@import 'mixins';\n@import 'vars';\n\n$maxWidthContainer: 1440;\n\n$mBp1: 319.98px;\n$mBp2: 479.98px;\n$mBp3: 767.98px;\n$mBp4: 991.98px;\n$mBp1: $maxWidthContainer + 12px;\n\n@mixin CONTAINER {\n  max-width: rem($maxWidthContainer);\n  margin: 0 auto;\n}\n\nbody {\n  background-color: $primary-color-4a;\n  font-family: $mainFont;\n  @include adaptiveValueRem(\"font-size\", $mainFontSize, $mainFontSizeMax,\n    $maxWidthContainer);\n  color: $mainFontColor;\n  font-weight: $mainFontWeight;\n  line-height: $mainLineHeight;\n}\n\n.warapper {\n  width: 100%;\n  min-height: 100%;\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n}\n\n// ===========================================================================\n\n.header {\n  background-color: transparentize($primary-color-2, 0.92);\n  // position: absolute;\n  // width: 100%;\n  // top: 0;\n  // left: 0;\n  // z-index: 50;\n\n  &__container {\n    @include CONTAINER;\n    display: flex;\n    // justify-content: space-between;\n    align-items: stretch;\n    color: $primary-color;\n    min-height: rem(58);\n    align-items: center;\n\n    @media (min-width: $mBp3) {\n      min-height: rem(80);\n    }\n  }\n  &__logo {\n    @include adaptiveValueRem(\"font-size\", 28, 38, $maxWidthContainer);\n    font-weight: 600;\n    letter-spacing: rem(2);\n    display: inline-block;\n\t  padding: rem(5) rem(15);\n\n    &:active {\n      color: $primary-color-2;\n    }\n  }\n  &__menu {\n    margin: 0 rem(40) 0 rem(32);\n    padding: rem(5) 0;\n\n    @media (min-width: $mBp2) {\n      margin: 0 rem(40) 0 rem(52);\n    }\n    @media (min-width: $mBp3) {\n      margin: 0 rem(40) 0 rem(72);\n    }\n  }\n}\n\n.menu {\n  @include adaptiveValueRem(\"font-size\", 15, 21, $maxWidthContainer);\n\n  &__list {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  &__item {\n  }\n  &__item:not(:last-child) {\n    margin: 0 rem(24) 0 0;\n  }\n  &__link {\n    transition: all 0.2s ease;\n\n    &:hover {\n      text-decoration: underline;\n    }\n    &:active {\n      color: $primary-color-2;\n    }\n  }\n}\n\n// ===========================================================================\n\n.main {\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &__container {\n    @include CONTAINER;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  &__item {\n    display: inline-block;\n    margin: em(20, $mainFontSizeMax);\n  }\n}\n\n.button {\n  @include adaptiveValueRem(\"padding\", 25, 30, $maxWidthContainer);\n  background-color: $primary-color;\n  border: 1px solid #000;\n  border-radius: rem(25);\n  box-shadow: rem(3) rem(4) rem(5) rgba(0, 0, 0, 0.7);\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: $primary-color-active;\n  }\n  &:active {\n    box-shadow: rem(0) rem(2) rem(3) rgba(0, 0, 0, 0.7);\n  }\n}\n\n// ===========================================================================\n\n.footer {\n  @include adaptiveValueRem(\"font-size\", 11, 16, $maxWidthContainer);\n  color: #737373;\n  background-color: transparentize($primary-color-2, 0.92);\n\n  &__container {\n    @include CONTAINER;\n  }\n  &__social {\n    margin: 3px;\n    height: rem(25);\n    display: flex;\n    align-items: center;\n  }\n  &__github {\n  }\n}\n\n.github {\n  &__link{\n    padding: rem(5);\n  }\n  &__img {\n    max-height: rem(15);\n  }\n}\n","$mainFont                   : 'Roboto';\n$mainFontColor              : #000;\n$mainFontSize               : 17;\n$mainFontSizeMax            : 27;\n$mainFontWeight             : 500;\n$mainLineHeight             : parts($mainFontSize * 1px);\n\n$primary-color              : #27dfa2;\n$primary-color-active       : #0ee79f;\n$primary-color-1            : #b6a1ed;\n$primary-color-2            : #8aedcc;\n$primary-color-3            : #ed8a72;\n$primary-color-4            : #ede47e;\n// secondary-color\n\n$primary-color-4a: transparentize($primary-color-4, 0.8);\n","$baseFontSize: 16px;\n\n// px to parts\n@function parts($pixels, $context: $baseFontSize) {\n  @if (unitless($pixels)) {\n    $pixels: $pixels * 1px;\n  }\n  @if (unitless($context)) {\n    $context: $context * 1px;\n  }\n  @return calc($pixels / $context);\n}\n\n// px to rem\n@function rem($pixels, $context: $baseFontSize) {\n  @return parts($pixels, $context)* 1rem;\n}\n\n// px to %\n@function prc($pixels, $context: $baseFontSize) {\n  @return parts($pixels, $context)* 100%;\n}\n\n// px to em\n@function em($pixels, $context: $baseFontSize) {\n  @return parts($pixels, $context)* 1em;\n}\n\n// This mixin dynamically changes the value of $property from $minValue\n// to $maxValue for the corresponding viewport value.\n// The width range of the viewport is set by the properties\n// $minWidthViewport and $maxWidthViewport.\n@mixin adaptiveValueVp($property, $minValue, $maxValue,\n  $maxWidthViewport, $minWidthViewport: 320) {\n  #{$property}: calc($minValue * 1px +\n    ($maxValue - $minValue) * (100vw - $minWidthViewport * 1px) /\n    ($maxWidthViewport - $minWidthViewport));\n}\n\n// Adaptive value in rem\n@mixin adaptiveValueVpRem($property, $minValue, $maxValue,\n  $maxWidthViewport, $minWidthViewport: 320) {\n  #{$property}: calc(rem($minValue) +\n    ($maxValue - $minValue) * (100vw - rem($minWidthViewport)) /\n     ($maxWidthViewport - $minWidthViewport));\n}\n\n//  Adaptive value inside the container\n@mixin adaptiveValue($property, $minValue, $maxValue,\n  $maxWidthContainer, $minWidthContainer: 320) {\n  #{$property}: $minValue * 1px;\n  @media (min-width: ($minWidthContainer * 1px)) {\n    @include adaptiveValueVp($property, $minValue, $maxValue,\n    $maxWidthContainer, $minWidthContainer);\n  }\n  @media (min-width: ($maxWidthContainer * 1px)) {\n    #{$property}: $maxValue * 1px;\n  }\n}\n\n// Adaptive value in rem inside the container\n@mixin adaptiveValueRem($property, $minValue, $maxValue,\n  $maxWidthContainer, $minWidthContainer: 320) {\n  #{$property}: rem($minValue);\n  @media (min-width: ($minWidthContainer * 1px)) {\n    @include adaptiveValueVpRem($property, $minValue, $maxValue,\n    $maxWidthContainer, $minWidthContainer);\n  }\n  @media (min-width: ($maxWidthContainer * 1px)) {\n    #{$property}: rem($maxValue * 1px);\n  }\n}\n"],"names":[],"sourceRoot":""}